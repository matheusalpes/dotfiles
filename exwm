  ;; Focus follows mouse
  (setq mouse-autoselect-window t
        focus-follows-mouse t)

  (defun alpes/exwm-update-class ()
    (exwm-workspace-rename-buffer exwm-class-name))

  (use-package exwm
    :config
    (require 'exwm)

    ;; Set correct resolution
    (require 'exwm-randr)
    (exwm-randr-enable)
    (add-hook 'exwm-randr-screen-change-hook
              (lambda ()
                (start-process-shell-command
                 "xrandr" nil "xrandr --output eDP1 --off --output HDMI1 --primary --mode 1920x1080")))

    ;; Workspaces 
    (setq exwm-workspace-number 5)

    ;; Forcing Tiling
    (setq exwm-manage-force-tiling t)

    ;; Keys to pass through to Emacs
    (setq exwm-input-prefix-keys
          '(?\C-x
            ?\C-u
            ?\C-h
            ?\M-x
            ?\M-`
            ?\M-&
            ?\M-:
            ?\C-\M-j
            ?\C-\ ))

    ;; Ctrl + Q will enable the next key to be sent directly
    (define-key exwm-mode-map [?\C-q] 'exwm-input-send-next-key)

    ;; Global Keybindings
    (setq exwm-input-global-keys
          ;; Reset to line mode
          `(([?\s-r] . exwm-reset)

            ;; Launch apps via shell
            ([?\s-&] . (lambda (command)
                         (interactive (list (read-shell-command "$ ")))
                         (start-process-shell-command command nil command)))

            ;; Switch workspace
            ([?\s-w] . exwm-workspace-switch)

            ;; Switch workspace using number keys
            ,@(mapcar (lambda (i)
                        `(,(kbd (format "s-%d" i)) .
                          (lambda ()
                            (interactive)
                            (exwm-workspace-switch-create , i))))
                      (number-sequence 0 9))))
    (exwm-enable))